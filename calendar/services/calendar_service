import 'package:device_calendar/device_calendar.dart' as dc;
import 'package:timezone/timezone.dart' as tz;
import 'package:timezone/data/latest_all.dart' as tzdata;

class CalendarService {
  final dc.DeviceCalendarPlugin _deviceCalendarPlugin = dc.DeviceCalendarPlugin();

  CalendarService() {
    tzdata.initializeTimeZones();
  }

  Future<bool> requestPermissions() async {
  final result = await _deviceCalendarPlugin.requestPermissions();
  return result.data ?? false;
}


  Future<List<dc.Calendar>> retrieveCalendars() async {
    final result = await _deviceCalendarPlugin.retrieveCalendars();
    if (result.data != null) {
      return result.data!;
    }
    return [];
  }

  Future<bool> addEventToCalendar(
    dc.Calendar calendar,
    String title,
    String description,
    DateTime start,
    DateTime end,
  ) async {
    final location = tz.getLocation('America/Sao_Paulo');
    final tzStart = tz.TZDateTime.from(start, location);
    final tzEnd = tz.TZDateTime.from(end, location);

    final eventToCreate = dc.Event(
      calendar.id,
      title: title,
      description: description,
      start: tzStart,
      end: tzEnd,
    );

    final createResult = await _deviceCalendarPlugin.createOrUpdateEvent(eventToCreate);

    if (createResult != null) {
      return createResult.isSuccess && (createResult.data?.isNotEmpty ?? false);
    }

    return false;
  }
}
